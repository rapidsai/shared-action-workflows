name: citestwheel
description: 'Runs dockerized smoke tests for RAPIDS wheels built by cibuildwheel'
inputs:
  wheel-dir:
    description: 'Path to wheels'
    required: true
  wheel-filename-pattern:
    description: 'Filename pattern of wheel e.g. rmm_cuda11-cp38-cp38-manylinux_2_24'
    required: true
  cpu-smoketest-command:
    description: 'CPU-only smoketest command'
    required: true
  gpu-smoketest-command:
    description: 'GPU-enabled smoketest command'
    required: false
    default: 'true'

runs:
  using: composite
  steps:
    - name: map CPU arches to respective Debian Bullseye docker containers
      run: |
        arch=$(uname -m)

        if [ "${arch}" == "aarch64" ]; then
          echo "DOCKER_CONTAINER=arm64v8/python" >> "${GITHUB_ENV}"
        elif  [ "${arch}" == "x86_64" ]; then
          echo "DOCKER_CONTAINER=python" >> "${GITHUB_ENV}"
        fi
      shell: bash

    - name: Run CPU smoke test
      run: >
        docker run --rm
        -v ${{ inputs.wheel-dir }}:/wheels
        "${DOCKER_CONTAINER}:${RAPIDS_PY_VER}-bullseye"
        sh -c "python3 -m venv /clean-venv &&
        . /clean-venv/bin/activate &&
        set -x &&
        python3 -m pip install --verbose /wheels/${{ inputs.wheel-filename-pattern }}_$(uname -m).whl &&
        python3 -m pip check &&
        ${{ inputs.cpu-smoketest-command }};"
      shell: bash

    - name: Run GPU smoke tests
      if: "${{ inputs.gpu-smoketest-command != '' }}"
      run: >
        docker run --rm
        -v ${{ inputs.wheel-dir }}:/wheels
        --runtime=nvidia
        "${DOCKER_CONTAINER}:${RAPIDS_PY_VER}-bullseye"
        sh -c "python3 -m venv /clean-venv &&
        . /clean-venv/bin/activate &&
        set -x &&
        python3 -m pip install --verbose /wheels/${{ inputs.wheel-filename-pattern }}_$(uname -m).whl &&
        python3 -m pip check &&
        ${{ inputs.gpu-smoketest-command }};"
      shell: bash
