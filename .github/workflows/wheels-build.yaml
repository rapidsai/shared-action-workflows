name: Build RAPIDS wheels

on:
  workflow_call:
    inputs:
      # repo and branch
      repo:
        type: string
      branch:
        type: string
      date:
        type: string
      sha:
        type: string
      build_type:
        required: true
        type: string
      script:
        required: true
        type: string

      # allow a bigger runner instance
      node_type:
        required: false
        type: string
        default: "cpu16"

      # general settings
      matrix_filter:
        type: string
        default: "."

      # Extra repository that will be cloned into the project directory.
      extra-repo:
        required: false
        type: string
        default: ''
      extra-repo-sha:
        required: false
        type: string
        default: ''
      # Note that this is the _name_ of a secret containing the key, not the key itself.
      extra-repo-deploy-key:
        required: false
        type: string
        default: ''
      # telemetry settings: Destination to send telemetry to
      default_endpoint:
        type: string
      # defaults to <default_endpoint>/v1/traces
      # Change it if you want to send to a different host or port number
      traces_endpoint:
        type: string
      # defaults to <default_endpoint>/v1/metrics
      # Change it if you want to send to a different host or port number
      metrics_endpoint:
        type: string
      # defaults to <default_endpoint>/v1/logs
      # Change it if you want to send to a different host or port number
      logs_endpoint:
        type: string
      traceparent:
        type: string
        description: |
            Opentelemetry traceparent. Format is described in https://medium.com/@mesutatasoy/understanding-traceparent-and-microservices-in-opentelemetry-notepad-series-7-de5c16bf6462
            Generally, 00-<trace_id 32 chars>-<span_id 16 chars>-01
      OTEL_SERVICE_NAME_PREFIX:
        type: string
        description: |
            The job name (id, rather) from the calling workflow. This is likely wheel-build-cpp or wheel-build-python, but verify that in your workflow (i.e. pr.yaml)
            This gets the matrix string appended to it to form the actual OTEL_SERVICE_NAME that links the parsed GitHub Actions logs with other telemetry.

defaults:
  run:
    shell: bash

permissions:
  actions: read
  checks: none
  contents: read
  deployments: none
  discussions: none
  id-token: write
  issues: none
  packages: read
  pages: none
  pull-requests: read
  repository-projects: none
  security-events: none
  statuses: none

env:
  TOP_LEVEL_TRACEPARENT: ${{ inputs.traceparent }}
  OTEL_EXPORTER_OTLP_ENDPOINT: "${{ inputs.default_endpoint }}"
  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: "${{ inputs.traces_endpoint }}"
  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: "${{ inputs.metrics_endpoint }}"
  OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: "${{ inputs.logs_endpoint }}"
  OTEL_EXPORTER_OTLP_PROTOCOL: "http/protobuf"
  OTEL_EXPORTER_OTLP_HEADERS: ${{ secrets.OTEL_EXPORTER_OTLP_HEADERS }}
  OTEL_EXPORTER_OTLP_CERTIFICATE: "/tmp/certs/ca.crt"
  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE: "/tmp/certs/client.crt"
  OTEL_EXPORTER_OTLP_CLIENT_KEY: "/tmp/certs/client.key"

jobs:

  compute-matrix:
    runs-on: ubuntu-latest
    outputs:
      MATRIX: ${{ steps.compute-matrix.outputs.MATRIX }}
    steps:
      - name: Compute Build Matrix
        id: compute-matrix
        run: |
          set -eo pipefail

          # please keep the matrices sorted in ascending order by the following:
          #
          #     [ARCH, PY_VER, CUDA_VER, LINUX_VER]
          #
          export MATRIX="
          # amd64
          - { ARCH: 'amd64', PY_VER: '3.10', CUDA_VER: '11.8.0', LINUX_VER: 'rockylinux8' }
          - { ARCH: 'amd64', PY_VER: '3.10', CUDA_VER: '12.5.1', LINUX_VER: 'rockylinux8' }
          - { ARCH: 'amd64', PY_VER: '3.11', CUDA_VER: '11.8.0', LINUX_VER: 'rockylinux8' }
          - { ARCH: 'amd64', PY_VER: '3.11', CUDA_VER: '12.5.1', LINUX_VER: 'rockylinux8' }
          - { ARCH: 'amd64', PY_VER: '3.12', CUDA_VER: '11.8.0', LINUX_VER: 'rockylinux8' }
          - { ARCH: 'amd64', PY_VER: '3.12', CUDA_VER: '12.5.1', LINUX_VER: 'rockylinux8' }
          # arm64
          - { ARCH: 'arm64', PY_VER: '3.10', CUDA_VER: '11.8.0', LINUX_VER: 'rockylinux8' }
          - { ARCH: 'arm64', PY_VER: '3.10', CUDA_VER: '12.5.1', LINUX_VER: 'rockylinux8' }
          - { ARCH: 'arm64', PY_VER: '3.11', CUDA_VER: '11.8.0', LINUX_VER: 'rockylinux8' }
          - { ARCH: 'arm64', PY_VER: '3.11', CUDA_VER: '12.5.1', LINUX_VER: 'rockylinux8' }
          - { ARCH: 'arm64', PY_VER: '3.12', CUDA_VER: '11.8.0', LINUX_VER: 'rockylinux8' }
          - { ARCH: 'arm64', PY_VER: '3.12', CUDA_VER: '12.5.1', LINUX_VER: 'rockylinux8' }
          "

          MATRIX="$(
            yq -n -o json 'env(MATRIX)' | \
            jq -c '${{ inputs.matrix_filter }} | if (. | length) > 0 then {include: .} else "Error: Empty matrix\n" | halt_error(1) end'
          )"

          echo "MATRIX=${MATRIX}" | tee --append "${GITHUB_OUTPUT}"
  build:
    name:  ${{ matrix.CUDA_VER }}, ${{ matrix.PY_VER }}, ${{ matrix.ARCH }}, ${{ matrix.LINUX_VER }}
    needs: [compute-matrix]
    strategy:
      matrix: ${{ fromJSON(needs.compute-matrix.outputs.MATRIX) }}
    runs-on: "linux-${{ matrix.ARCH }}-${{ inputs.node_type }}"
    env:
      RAPIDS_ARTIFACTS_DIR: ${{ github.workspace }}/artifacts
      OTEL_SERVICE_NAME: "${{inputs.OTEL_SERVICE_NAME_PREFIX}} / ${{ matrix.CUDA_VER }}, ${{ matrix.PY_VER }}, ${{ matrix.ARCH }}, ${{ matrix.LINUX_VER }}"
    container:
      image: "rapidsai/ci-wheel:cuda${{ matrix.CUDA_VER }}-${{ matrix.LINUX_VER }}-py${{ matrix.PY_VER }}"
      env:
        RAPIDS_BUILD_TYPE: ${{ inputs.build_type }}

    steps:
      # Temporary until ci-imgs build with
      # https://github.com/rapidsai/gha-tools/commit/8bd8fca71b5fae38b1493c547d15e73da40b32e1#diff-f1f054b2906bfd36ad706ed2fa6aa028fa529e65b25167e4ca7ca45546d59ed8R14
      # is available. The PR is merged, but at time of writing, no ci-imgs builds have been released to pick it up.
      - name: Download gha-tools with git clone
        run: |
            git clone https://github.com/msarahan/gha-tools.git -b add-telemetry-traceparent-scripts /tmp/gha-tools
            echo "/tmp/gha-tools/tools" >> "${GITHUB_PATH}"

      - name: Telemetry setup
        id: job-traceparent
        uses: rapidsai/shared-actions/telemetry-traceparent@add-telemetry
      - name: Write certificate files for mTLS
        run: |
          mkdir -p /tmp/certs
          cat << EOF > ${OTEL_EXPORTER_OTLP_CERTIFICATE}
          ${{ secrets.OTEL_EXPORTER_OTLP_CA_CERTIFICATE }}
          EOF
          cat << EOF > ${OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE}
          ${{ secrets.OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE }}
          EOF
          cat << EOF > ${OTEL_EXPORTER_OTLP_CLIENT_KEY}
          ${{ secrets.OTEL_EXPORTER_OTLP_CLIENT_KEY }}
          EOF

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}
          role-duration-seconds: 43200 # 12h
      - name: checkout code repo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.sha }}
          fetch-depth: 0 # unshallow fetch for setuptools-scm
          persist-credentials: false

      - name: Standardize repository information
        uses: rapidsai/shared-actions/rapids-github-info@main
        with:
          repo: ${{ inputs.repo }}
          branch: ${{ inputs.branch }}
          date: ${{ inputs.date }}
          sha: ${{ inputs.sha }}

      - name: Preprocess extra repos
        id: preprocess-extras
        if: ${{ inputs.extra-repo != '' }}
        run: |
          EXTRA_REPO_PATH=$(echo ${{ inputs.extra-repo }} | cut -d "/"  -f 2)
          echo "EXTRA_REPO_PATH=${EXTRA_REPO_PATH}" >> $GITHUB_OUTPUT

      - name: checkout extra repos
        uses: actions/checkout@v4
        if: ${{ inputs.extra-repo != '' }}
        with:
          repository: ${{ inputs.extra-repo }}
          ref: ${{ inputs.extra-repo-sha }}
          path: "./${{ steps.preprocess-extras.outputs.EXTRA_REPO_PATH }}"
          ssh-key: ${{ secrets[inputs.extra-repo-deploy-key] }}
          persist-credentials: false

      # Temporary until https://github.com/rapidsai/ci-imgs/pull/196 is merged
      - name: Install OpenTelemetry instrumentation
        run: |
          pip install opentelemetry-distro[otlp] \
              opentelemetry-exporter-prometheus \
              git+https://github.com/msarahan/opentelemetry-python-contrib.git@add-conda-build-instrumentation#subdirectory=instrumentation/opentelemetry-instrumentation-conda-build
          opentelemetry-bootstrap -a install

      - name: Build and repair the wheel
        run: |
          ${{ inputs.script }}
        env:
          GH_TOKEN: ${{ github.token }}
        # Use a shell that loads the rc file so that we get the compiler settings
        shell: bash -leo pipefail {0}
      - name: Upload additional artifacts
        if: "!cancelled()"
        run: rapids-upload-artifacts-dir cuda${RAPIDS_CUDA_VERSION%%.*}_$(arch)_py${RAPIDS_PY_VERSION//.}
      - name: Telemetry summary
        id: telemetry-summary
        if: "always()"
        uses: rapidsai/shared-actions/telemetry-summarize@add-telemetry
        with:
          traceparent: "${{ env.TOP_LEVEL_TRACEPARENT }}"