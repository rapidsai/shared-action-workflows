name: Publish RAPIDS manylinux wheels

on:
  workflow_call:
    inputs:
      # repo and branch
      repo:
        type: string
      branch:
        type: string
      date:
        type: string
      sha:
        type: string
      build_type:
        required: true
        type: string

      # general settings
      package-name:
        required: true
        type: string

jobs:
  wheel-publish:
    name: wheels publish
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.8', '3.10']
        linux-arch: ["x86_64", "aarch64"]
        ctk: ['11.8.0']
    container:
      # ctk version of the cibw container is irrelevant in the publish step
      # it's simply a launcher for twine
      image: "rapidsai/cibuildwheel:cuda-runtime-11.8.0-ubuntu20.04"
      env:
        RAPIDS_BUILD_TYPE: ${{ inputs.build_type }}
        RAPIDS_ARCH: ${{ matrix.linux-arch }}
        RAPIDS_PY_VERSION: ${{ matrix.python }}
        AWS_ACCESS_KEY_ID: ${{ secrets.RAPIDSAI_GHA_AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.RAPIDSAI_GHA_AWS_SECRET_ACCESS_KEY }}
        TWINE_USERNAME: cibuildwheel
        TWINE_PASSWORD: ${{ secrets.RAPIDSAI_PYPI_CI_PASSWORD }}
        TWINE_REPOSITORY_URL: "https://pypi.k8s.rapids.ai/simple/"
    steps:
    - name: checkout code repo
      uses: actions/checkout@v3
      with:
        repository: ${{ inputs.repo }}
        ref: ${{ inputs.sha }}
        fetch-depth: 0 # unshallow fetch for setuptools-scm
        persist-credentials: false

    - name: Standardize repository information
      uses: rapidsai/shared-action-workflows/rapids-github-info@branch-23.02
      with:
        repo: ${{ inputs.repo }}
        branch: ${{ inputs.branch }}
        date: ${{ inputs.date }}
        sha: ${{ inputs.sha }}

    - name: Set CTK-related vars from input CTK versions
      uses: rapidsai/shared-action-workflows/wheel-ctk-name-gen@branch-23.02
      with:
        ctk: ${{ matrix.ctk }}
        package-name: ${{ inputs.package-name }}

    - name: Download wheel from downloads.rapids.ai and publish to internal PyPI
      run: |
        rapids-download-wheels-from-s3 ./dist
        rapids-twine ./dist/
