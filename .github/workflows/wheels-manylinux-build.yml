name: Build RAPIDS manylinux wheels

on:
  workflow_call:
    inputs:
      # repo and branch
      repo:
        type: string
      branch:
        type: string
      date:
        type: string
      sha:
        type: string
      build_type:
        required: true
        type: string
      build_script:
        type: string
        default: "ci/build_wheel.sh"

      # allow a bigger runner instance
      node_type:
        required: false
        type: string
        default: "cpu16"

      # general settings
      package-dir:
        required: true
        type: string
      matrix_filter:
        type: string
        default: "."

      # Extra repository that will be cloned into the project directory.
      extra-repo:
        required: false
        type: string
        default: ''
      extra-repo-sha:
        required: false
        type: string
        default: ''
      # Note that this is the _name_ of a secret containing the key, not the key itself.
      extra-repo-deploy-key:
        required: false
        type: string
        default: ''

defaults:
  run:
    shell: bash

permissions:
  actions: read
  checks: none
  contents: read
  deployments: none
  discussions: none
  id-token: write
  issues: none
  packages: read
  pages: none
  pull-requests: read
  repository-projects: none
  security-events: none
  statuses: none

jobs:

  compute-matrix:
    runs-on: ubuntu-latest
    outputs:
      MATRIX: ${{ steps.compute-matrix.outputs.MATRIX }}
    steps:
      - name: Compute Build Matrix
        id: compute-matrix
        run: |
          set -eo pipefail

          export MATRIX="
          - { ctk: '11.8.0', arch: 'amd64', python: '3.9', linux_ver: 'centos7' }
          - { ctk: '11.8.0', arch: 'amd64', python: '3.10', linux_ver: 'centos7' }
          - { ctk: '11.8.0', arch: 'arm64', python: '3.9',  linux_ver: 'ubuntu20.04' }
          - { ctk: '11.8.0', arch: 'arm64', python: '3.10', linux_ver: 'ubuntu20.04' }
          - { ctk: '12.0.1', arch: 'amd64', python: '3.9',  linux_ver: 'centos7' }
          - { ctk: '12.0.1', arch: 'amd64', python: '3.10',  linux_ver: 'centos7' }
          - { ctk: '12.0.1', arch: 'arm64', python: '3.9', linux_ver: 'ubuntu20.04' }
          - { ctk: '12.0.1', arch: 'arm64', python: '3.10', linux_ver: 'ubuntu20.04' }
          "

          echo "MATRIX=$(
            yq -n -o json 'env(MATRIX)' | \
            jq -c '${{ inputs.matrix_filter }} | {include: .}' \
          )" | tee --append "${GITHUB_OUTPUT}"

  wheel-build:
    name: cibuildwheel ${{ matrix.arch }} ${{ matrix.python }} ${{ matrix.ctk }}
    needs: [compute-matrix]
    strategy:
      matrix: ${{ fromJSON(needs.compute-matrix.outputs.MATRIX) }}
    runs-on: "linux-${{ matrix.arch }}-${{ inputs.node_type }}"
    container:
      image: "rapidsai/ci-wheel:cuda${{ matrix.ctk }}-${{ matrix.linux_ver }}-py${{ matrix.python }}"

      env:
        RAPIDS_BUILD_TYPE: ${{ inputs.build_type }}
        RAPIDS_PY_VERSION: ${{ matrix.python }}

    steps:
    - uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ vars.AWS_ROLE_ARN }}
        aws-region: ${{ vars.AWS_REGION }}
        role-duration-seconds: 43200 # 12h
    - name: checkout code repo
      uses: actions/checkout@v3
      with:
        repository: ${{ inputs.repo }}
        ref: ${{ inputs.sha }}
        fetch-depth: 0 # unshallow fetch for setuptools-scm
        persist-credentials: false

    - name: Standardize repository information
      uses: rapidsai/shared-action-workflows/rapids-github-info@branch-23.08
      with:
        repo: ${{ inputs.repo }}
        branch: ${{ inputs.branch }}
        date: ${{ inputs.date }}
        sha: ${{ inputs.sha }}

    - name: Preprocess extra repos
      id: preprocess-extras
      if: ${{ inputs.extra-repo != '' }}
      run: |
        EXTRA_REPO_PATH=$(echo ${{ inputs.extra-repo }} | cut -d "/"  -f 2)
        echo "EXTRA_REPO_PATH=${EXTRA_REPO_PATH}" >> $GITHUB_OUTPUT

    - name: checkout extra repos
      uses: actions/checkout@v3
      if: ${{ inputs.extra-repo != '' }}
      with:
        repository: ${{ inputs.extra-repo }}
        ref: ${{ inputs.extra-repo-sha }}
        path: ${{ inputs.package-dir }}/${{ steps.preprocess-extras.outputs.EXTRA_REPO_PATH }}
        ssh-key: ${{ secrets[inputs.extra-repo-deploy-key] }}
        persist-credentials: false

    - name: Build and repair the wheel
      run: |
        # Store internal pypi credentials before any step that may download wheels
        printf 'machine pypi.k8s.rapids.ai\n\tlogin cibuildwheel\n\tpassword ${{ secrets.RAPIDSAI_PYPI_CI_PASSWORD }}\n' > ~/.netrc
        ${{ inputs.build_script }}
      env:
        GH_TOKEN: ${{ github.token }}
      # Use a shell that loads the rc file so that we get the compiler settings
      shell: bash -leo pipefail {0}
