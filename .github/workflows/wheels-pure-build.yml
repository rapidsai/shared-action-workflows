name: Build RAPIDS pure-python wheels

on:
  workflow_call:
    inputs:
      # repo and branch
      repo:
        type: string
      branch:
        type: string
      date:
        type: string
      sha:
        type: string
      build_type:
        required: true
        type: string

      package-name:
        required: true
        type: string
      package-dir:
        required: true
        type: string

      # run command before pure wheel build
      before-wheel:
        type: string
        required: false
        default: 'true'

      # TODO: The below flag is to support the older packaging structure. We
      # can remove it once all packages building wheels have migrated away from
      # the old structure.
      # Enable libraries that aren't using versioneer or
      # RAPIDS_PY_WHEEL_CUDA_SUFFIX in setup.py
      uses-setup-env-vars:
        required: false
        type: boolean
        default: true

permissions:
  actions: none
  checks: none
  contents: read
  deployments: none
  discussions: none
  id-token: write
  issues: none
  packages: read
  pages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none

jobs:
  wheel-epoch-timestamp:
    name: wheel epoch timestamper
    runs-on: ubuntu-latest
    outputs:
      rapids_epoch_timestamp: ${{ steps.get_epoch_time.outputs.rapids_epoch_timestamp }}

    steps:
    - name: Get epoch timestamp to use as nightly version
      id: get_epoch_time
      run: echo "RAPIDS_EPOCH_TIMESTAMP=$(date +%s)" >> "${GITHUB_OUTPUT}"

  wheel-build:
    name: wheel build pure ${{ matrix.ctk }}
    needs: wheel-epoch-timestamp
    strategy:
      matrix:
        ctk: ["11.8.0"]
    runs-on: ubuntu-latest
    container:
      image: "rapidsai/cibuildwheel:cuda-runtime-${{ matrix.ctk }}-ubuntu20.04"
      env:
        RAPIDS_BUILD_TYPE: ${{ inputs.build_type }}
        RAPIDS_PY_VERSION: "3.8"

    steps:
    - uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        role-to-assume: ${{ vars.AWS_ROLE_ARN }}
        aws-region: ${{ vars.AWS_REGION }}
        role-duration-seconds: 43200 # 12h
    - name: checkout code repo
      uses: actions/checkout@v3
      with:
        repository: ${{ inputs.repo }}
        ref: ${{ inputs.sha }}
        fetch-depth: 0 # unshallow fetch for setuptools-scm
        persist-credentials: false

    - name: Standardize repository information
      uses: rapidsai/shared-action-workflows/rapids-github-info@branch-23.04
      with:
        repo: ${{ inputs.repo }}
        branch: ${{ inputs.branch }}
        date: ${{ inputs.date }}
        sha: ${{ inputs.sha }}

    - name: Set CTK-related vars from input CTK versions
      uses: rapidsai/shared-action-workflows/wheel-ctk-name-gen@branch-23.04
      with:
        ctk: ${{ matrix.ctk }}
        package-name: ${{ inputs.package-name }}

    - name: Run before-wheel command
      run: "${{ inputs.before-wheel }}"

    - name: Build pure python wheel with pip wheel
      run: |
        versioneer_override="$(rapids-pip-wheel-version ${{ needs.wheel-epoch-timestamp.outputs.rapids_epoch_timestamp }})"

        if [ "${{ inputs.uses-setup-env-vars }}" = true ]; then
          export RAPIDS_PY_WHEEL_VERSIONEER_OVERRIDE="${versioneer_override}"
        else
          bash ci/release/apply_wheel_modifications.sh ${versioneer_override} ${RAPIDS_PY_WHEEL_CUDA_SUFFIX}
          echo "The package name and/or version was modified in the package source. The git diff is:"
          git diff
        fi

        python -m pip wheel -w ./dist ${{ inputs.package-dir }} --no-deps -vvv
      shell: bash

    - name: Upload wheels to downloads.rapids.ai
      run: rapids-upload-wheels-to-s3 dist
