name: Build RAPIDS pure-python wheels

on:
  workflow_call:
    inputs:
      # repo and branch
      repo:
        type: string
      branch:
        type: string
      date:
        type: string
      sha:
        type: string
      build_type:
        required: true
        type: string

      package-name:
        required: true
        type: string
      package-dir:
        required: true
        type: string

      # run command before pure wheel build
      before-wheel:
        type: string
        required: false
        default: 'true'

defaults:
  run:
    shell: bash

permissions:
  actions: read
  checks: none
  contents: read
  deployments: none
  discussions: none
  id-token: write
  issues: none
  packages: read
  pages: none
  pull-requests: read
  repository-projects: none
  security-events: none
  statuses: none

jobs:
  wheel-epoch-timestamp:
    name: wheel epoch timestamper
    runs-on: ubuntu-latest
    outputs:
      rapids_epoch_timestamp: ${{ steps.get_epoch_time.outputs.rapids_epoch_timestamp }}

    steps:
    - name: Get epoch timestamp to use as nightly version
      id: get_epoch_time
      run: echo "RAPIDS_EPOCH_TIMESTAMP=$(date +%s)" >> "${GITHUB_OUTPUT}"

  wheel-build:
    name: wheel build pure ${{ matrix.ctk }}
    needs: wheel-epoch-timestamp
    env:
      RAPIDS_ARTIFACTS_DIR: ${{ github.workspace }}/artifacts
    strategy:
      matrix:
        ctk: ["11.8.0", "12.0.1"]
    runs-on: ubuntu-latest
    container:
      # Always use the manylinux container built on x86 to match the runner arch
      image: "rapidsai/ci-wheel:cuda${{ matrix.ctk }}-centos7-py3.10"
      env:
        RAPIDS_BUILD_TYPE: ${{ inputs.build_type }}

    steps:
    - uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ vars.AWS_ROLE_ARN }}
        aws-region: ${{ vars.AWS_REGION }}
        role-duration-seconds: 43200 # 12h
    - name: checkout code repo
      uses: actions/checkout@v3
      with:
        repository: ${{ inputs.repo }}
        ref: ${{ inputs.sha }}
        fetch-depth: 0 # unshallow fetch for setuptools-scm
        persist-credentials: false

    - name: Standardize repository information
      uses: rapidsai/shared-action-workflows/rapids-github-info@branch-23.08
      with:
        repo: ${{ inputs.repo }}
        branch: ${{ inputs.branch }}
        date: ${{ inputs.date }}
        sha: ${{ inputs.sha }}

    - name: Build pure python wheel with pip wheel
      run: |
        PIP_CU_VERSION="$(rapids-wheel-ctk-name-gen ${{ matrix.ctk }})"

        # The variable PIP_CU_VERSION needs to be used as an unevaluated string by downstream libraries
        # to support pulling wheels built from a previous workflow for different
        # CUDA versions

        ${{ inputs.before-wheel }}

        versioneer_override="$(rapids-pip-wheel-version ${{ needs.wheel-epoch-timestamp.outputs.rapids_epoch_timestamp }})"

        bash ci/release/apply_wheel_modifications.sh ${versioneer_override} "-${PIP_CU_VERSION}"
        echo "The package name and/or version was modified in the package source. The git diff is:"
        git diff

        python -m pip wheel -w ./dist ${{ inputs.package-dir }} --no-deps -vvv

        # rapids-upload-wheels-to-s3 uses rapids-package-name which implicitly relies
        # on this variable being set
        export RAPIDS_PY_WHEEL_NAME="${{ inputs.package-name }}_${PIP_CU_VERSION}"
        rapids-upload-wheels-to-s3 dist
    - name: Upload additional artifacts
      if: "!cancelled()"
      run: rapids-upload-artifacts-dir cuda${RAPIDS_CUDA_VERSION%%.*}_$(arch)_py${RAPIDS_PY_VERSION//.}
