on:
  workflow_call:
    inputs:
      build_type:
        required: true
        type: string
      branch:
        type: string
      date:
        type: string
      sha:
        type: string
      repo:
        type: string
      arch:
        type: string
        default: "amd64"
      node_type:
        type: string
        default: "cpu8"
      container_image:
        type: string
        default: "rapidsai/ci-conda:latest"
      run_script:
        required: true
        type: string
      default_endpoint:
        type: string
        description: "Destination to send telemetry to, not including path like /v1/traces"
      traceparent:
        type: string
        description: |
            Opentelemetry traceparent. Format is described in https://medium.com/@mesutatasoy/understanding-traceparent-and-microservices-in-opentelemetry-notepad-series-7-de5c16bf6462
            Generally, 00-<trace_id 32 chars>-<span_id 16 chars>-01
      otel_resource_attributes:
        type: string
        description: |
          Comma-separated key=value pairs used for storing additional "tags" to better identify data
      shared_actions_repo:
        type: string
        description: git repo for rapidsai/shared-actions code
        default: rapidsai/shared-actions
      shared_actions_ref:
        type: string
        description: git ref of branch/tag/sha for rapidsai/shared-actions repo
        default: main
      file_to_upload:
        type: string
        default: "gh-status.json"

defaults:
  run:
    shell: bash

permissions:
  actions: read
  checks: none
  contents: read
  deployments: none
  discussions: none
  id-token: write
  issues: none
  packages: read
  pages: none
  pull-requests: read
  repository-projects: none
  security-events: none
  statuses: none

env:
  # TODO: this should be set as an org-wide variable
  OTEL_EXPORTER_OTLP_ENDPOINT: "${{ inputs.default_endpoint }}"
  OTEL_EXPORTER_OTLP_PROTOCOL: "http/protobuf"
  OTEL_PYTHON_DISABLED_INSTRUMENTATIONS: "jinja2"
  OTEL_RESOURCE_ATTRIBUTES: ${{inputs.otel_resource_attributes}}

jobs:
  build:
    strategy:
      fail-fast: false
    runs-on: "linux-${{ inputs.arch }}-${{ inputs.node_type }}"
    container:
      image: ${{ inputs.container_image }}
      env:
        RAPIDS_BUILD_TYPE: ${{ inputs.build_type }}
        NVIDIA_VISIBLE_DEVICES: ${{ env.NVIDIA_VISIBLE_DEVICES }}
    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}
          role-duration-seconds: 43200 # 12h
      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.sha }}
          fetch-depth: 0
      - name: Checkout actions
        uses: actions/checkout@v4
        if: always()
        with:
            repository: ${{inputs.shared_actions_repo}}
            ref: ${{inputs.shared_actions_ref}}
            path: ./shared-actions
      - name: Get PR Info
        if: startsWith(github.ref_name, 'pull-request/')
        id: get-pr-info
        uses: nv-gha-runners/get-pr-info@main
      - name: Add PR Info
        if: startsWith(github.ref_name, 'pull-request/')
        run: |
          echo "RAPIDS_BASE_BRANCH=${{ fromJSON(steps.get-pr-info.outputs.pr-info).base.ref }}" >> "${GITHUB_ENV}"
      - name: Standardize repository information
        run: |
          echo "RAPIDS_NIGHTLY_DATE=${{ inputs.date }}" >> "${GITHUB_ENV}"
          echo "RAPIDS_REF_NAME=${{ inputs.branch || github.ref_name }}" >> "${GITHUB_ENV}"
          echo "RAPIDS_REPOSITORY=${{ inputs.repo || github.repository }}" >> "${GITHUB_ENV}"
          echo "RAPIDS_SHA=$(git rev-parse HEAD)" >> "${GITHUB_ENV}"

      - name: Run script
        run: ${{ inputs.run_script }}
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Upload file to GitHub Artifact
        uses: actions/upload-artifact@v4
        with:
          name: result
          path: ${{ inputs.file_to_upload }}
          if-no-files-found: ignore

      - name: Telemetry summary
        id: telemetry-summary
        if: always()
        uses: ./shared-actions/telemetry-summarize
        with:
          traceparent: "${{ inputs.traceparent }}"
          ca_cert: "${{secrets.OTEL_EXPORTER_OTLP_CA_CERTIFICATE}}"
          client_cert: "${{secrets.OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE}}"
          client_key: "${{secrets.OTEL_EXPORTER_OTLP_CLIENT_KEY}}"
